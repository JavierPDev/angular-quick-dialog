{"version":3,"sources":["angular-quick-dialog.js"],"names":[],"mappings":"CAAA,SAAA,EAAA,GACA,YAEA,GAAA,OAAA,yBACA,QAAA,gBAAA,aAAA,SAAA,GAmBA,QAAA,GAAA,EAAA,GAGA,GAFA,KAAA,WAAA,GAEA,EACA,KAAA,IAAA,OAAA,sBAGA,MAAA,aAAA,EACA,KAAA,KAAA,EAAA,GACA,KAAA,gBAAA,EAwBA,QAAA,GAAA,GACA,EAAA,EAAA,GACA,EAAA,GAAA,OAGA,QAAA,GAAA,GACA,EAAA,EAAA,EAAA,GAAA,EAAA,SAAA,KACA,EAAA,GAAA,QAGA,QAAA,GAAA,EAAA,GAEA,MADA,GAAA,EAAA,IAAA,GAAA,GAAA,EAAA,GACA,EAAA,EAAA,IAGA,QAAA,KACA,KACA,EAAA,QAGA,QAAA,GAAA,GACA,MAAA,GAAA,QAAA,SAAA,OAxEA,GAAA,MACA,GACA,SACA,IAAA,EACA,KAAA,SAAA,GACA,KAAA,MAAA,KAAA,OAAA,GAEA,IAAA,WACA,MAAA,MAAA,QAAA,KAAA,MAEA,OAAA,WACA,MAAA,MAAA,MAAA,KAAA,IAAA,IAEA,MAAA,WACA,KAAA,IAAA,GA8DA,OA9CA,GAAA,UAAA,KAAA,WACA,KAAA,WAAA,EACA,EAAA,KAAA,MAEA,KAAA,iBACA,EAAA,WAAA,qBAAA,KAAA,eAIA,EAAA,UAAA,MAAA,WACA,KAAA,WACA,EAAA,MAGA,KAAA,WAAA,EAEA,KAAA,iBACA,EAAA,WAAA,qBAAA,KAAA,gBA8BA,KAAA,EACA,MAAA,EACA,OAAA,EACA,MAAA,MAIA,UAAA,eAAA,WAAA,eAAA,SAAA,EAAA,GACA,OACA,SAAA,KACA,YAAA,6BACA,SACA,YAAA,EACA,KAAA,SAAA,EAAA,EAAA,GAkCA,QAAA,KACA,EAAA,GAAA,SAAA,cACA,EAAA,OAAA,GACA,EAAA,KAAA,QAAA,GACA,EAAA,KAAA,UAAA,GAEA,EAAA,WACA,EAAA,UAIA,QAAA,KACA,EAAA,OAAA,UAAA,GACA,EAAA,OAAA,QAAA,GACA,EAAA,SAGA,OAAA,IACA,EAAA,QACA,EAAA,GAIA,QAAA,GAAA,GACA,EAAA,UAAA,IACA,EAAA,iBACA,EAAA,WACA,EAAA,OAAA,UAEA,KAIA,QAAA,GAAA,GACA,EAAA,kBACA,EAAA,WACA,EAAA,OAAA,UAEA,IAvEA,GAAA,GAAA,EAAA,QAAA,SAAA,cAAA,QAAA,SAAA,0BACA,EAAA,GACA,EAAA,EAAA,QAAA,SAAA,MACA,EAAA,EAAA,QAAA,GACA,EAAA,SAAA,eAAA,EAAA,YAAA,EAAA,GACA,EAAA,SAAA,eAAA,EAAA,YACA,EAAA,SAAA,eAAA,EAAA,WAGA,GAAA,OAAA,EAAA,OAAA,EAAA,WAAA,EAAA,gBAGA,IAAA,IAAA,CACA,GAAA,OAAA,mBAAA,SAAA,GACA,IACA,EACA,IAEA,KAIA,GAAA,IAKA,EAAA,IAAA,oBAAA,WACA,EAAA,gBAiDA,OAAA,OAAA,SAGA,SAAA,GACA,IACA,EAAA,QAAA,OAAA,sBACA,MAAA,GACA,EAAA,QAAA,OAAA,yBAEA,EAAA,KAAA,iBAAA,SAAA,GACA,EAAA,IAAA,6BACA","file":"angular-quick-dialog.min.js","sourcesContent":["(function(window, angular, undefined) {\n'use strict';\n\nangular.module('angularQuickDialog', [])\n    .factory('$quickDialog', [\"$rootScope\", function($rootScope) {\n        var dialogs = {},\n            visibleDialogs = {\n                stack: [],\n                top: 0,\n                push: function(dialog) {\n                    this.stack[this.top++] = dialog;\n                },\n                pop: function() {\n                    return this.stack[--this.top];\n                },\n                getTop: function() {\n                    return this.stack[this.top - 1];\n                },\n                clear: function() {\n                    this.top = 0;\n                }\n            };\n\n        function Dialog(name, shouldBroadcast) {\n            this.isVisible = false;\n\n            if (!name) {\n                throw new Error('Dialog needs a name');\n            }\n\n            this.originalName = name;\n            this.name = stripInvalidChars(name);\n            this.shouldBroadcast = shouldBroadcast;\n        }\n\n        Dialog.prototype.open = function() {\n            this.isVisible = true;\n            visibleDialogs.push(this);\n\n            if (this.shouldBroadcast) {\n                $rootScope.$broadcast('quickDialog.opened', this.originalName);\n            }\n        };\n\n        Dialog.prototype.close = function() {\n            if (this.isVisible) {\n                visibleDialogs.pop();\n            }\n\n            this.isVisible = false;\n\n            if (this.shouldBroadcast) {\n                $rootScope.$broadcast('quickDialog.closed', this.originalName);\n            }\n        };\n\n        function open(dialogName) {\n            dialogName = stripInvalidChars(dialogName);\n            dialogs[dialogName].open();\n        }\n\n        function close(dialogName) {\n            dialogName = dialogName ? stripInvalidChars(dialogName) : visibleDialogs.getTop().name;\n            dialogs[dialogName].close();\n        }\n\n        function create(dialogName, shouldBroadcast) {\n            dialogs[stripInvalidChars(dialogName)] = new Dialog(dialogName, shouldBroadcast);\n            return dialogs[stripInvalidChars(dialogName)];\n        }\n\n        function reset() {\n            dialogs = {};\n            visibleDialogs.clear();\n        }\n\n        function stripInvalidChars(dialogName) {\n            return dialogName.replace(/\\.|\\:/g, '_$_');\n        }\n\n\n        return {\n            open: open,\n            close: close,\n            create: create,\n            reset: reset\n        };\n    }])\n\n\t.directive('quickDialog', [\"$timeout\", \"$quickDialog\", function($timeout, $quickDialog) {\n\t\treturn {\n\t\t\trestrict: 'EA',\n            templateUrl: 'template/quick-dialog.html', \n\t\t\tscope: {},\n\t\t\ttransclude: true,\n\t\t\tlink: function(scope, element, attrs) {\n\t\t\t\tvar backdropEl = angular.element(document.createElement('div')).addClass('quick-dialog__backdrop'),\n                    ESC = 27,\n\t\t\t\t\tbody = angular.element(document.body),\n\t\t\t\t\twindowEl = angular.element(window),\n\t\t\t\t\tfocusEl = document.getElementById(attrs.openFocus) || element[0],\n\t\t\t\t\tcloseFocusEl = document.getElementById(attrs.closeFocus),\n\t\t\t\t\toriginalExitFocusEl = document.getElementById(attrs.closeFocus);\n\n\n                scope.dialog = $quickDialog.create(attrs.dialogName, attrs.shouldBroadcast);\n                \n                // Skip initial dirty check otherwise stack top becomes negative\n                var initialCheck = true;\n                scope.$watch('dialog.isVisible', function(isVisible) {\n                    if (!initialCheck) {\n                        if (isVisible) {\n                            openDialog();\n                        } else {\n                            closeDialog();\n                        }\n                    }\n\n                    initialCheck = false;\n                });\n\n\n                // Clear cached dialogs and visiblility stack whenever switching views.\n                scope.$on('$routeChangeStart', function() {\n                    $quickDialog.reset();\n                });\n\n\n\n\t\t\t\tfunction openDialog() {\n\t\t\t\t\tcloseFocusEl = closeFocusEl || document.activeElement;\n\t\t\t\t\tbody.append(backdropEl);\n\t\t\t\t\tbackdropEl.bind('click', onClick);\n\t\t\t\t\twindowEl.bind('keydown', onEsc);\n\n\t\t\t\t\t$timeout(function openFocus() {\n\t\t\t\t\t\tfocusEl.focus();\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tfunction closeDialog() {\n\t\t\t\t\twindowEl.unbind('keydown', onEsc);\n\t\t\t\t\tbackdropEl.unbind('click', onClick);\n\t\t\t\t\tbackdropEl.remove();\n\t\t\t\t\t\n\n                    if (closeFocusEl !== null) {\n                        closeFocusEl.focus();\n                        closeFocusEl = originalExitFocusEl;\n                    }\n\t\t\t\t}\n\n\t\t\t\tfunction onEsc(event) {\n\t\t\t\t\tif (event.keyCode === ESC) {\n                        event.preventDefault();\n                        $timeout(function() {\n                            scope.dialog.close();\n                        });\n                        closeDialog();\n\t\t\t\t\t}\n\t\t\t\t}\n\n                function onClick(event) {\n                    event.stopPropagation();\n\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\tscope.dialog.close();\n\t\t\t\t\t});\n                    closeDialog();\n                }\n\n\t\t\t}\n\t\t};\n\t}]);\n})(window, window.angular);\n\n\n(function(module) {\ntry {\n  module = angular.module('angularQuickDialog');\n} catch (e) {\n  module = angular.module('angularQuickDialog', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('template/quick-dialog.html',\n    '<div class=\"quick-dialog\" ng-show=\"dialog.isVisible\"><span class=\"quick-dialog__close\" ng-click=\"dialog.close()\">x</span><div class=\"quick-dialog__content\" ng-transclude></div></div>');\n}]);\n})();\n"],"sourceRoot":"/source/"}